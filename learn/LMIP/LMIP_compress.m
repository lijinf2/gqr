function [B,elapse] = LMIP_compress(A, model)
%   This is a wrapper function of LMIP (Locality Sensitive Hashing)  testing.
%
%	Usage:
%	[B,elapse] = LMIP_compress(A, model)
%
%	      A: Rows of vectors of data points. Each row is sample point
%     model: The model generated by LSH_learn.
%
%	      B: The binary code of the input data A. Each row is sample point
%    elapse: The coding time (testing time).
%
%
%   version 1.0 --Jan/2018 
%
%   Written by  Xinyan Dai (xinyan.dai@outlook.com)
%                                             


tmp_T = tic;
[Nitems, Nfeatures] = size(A);
lengthBits = model.lengthBits;


Ym = A * model.U;
B = (Ym > 0);
prct = model.prct;

norms = sum(A.^2, 2);

lens = zeros(Nitems, lengthBits);

for k=1:Nitems
	% vector whose norms is not greater than prct[2] belongs to the 0 group
	currentLength = cal_weight(model.prct, norms, k, model.normInteval,  model.maxbits);
	
	mask = 1;
	for bitIndex=1:lengthBits
		lens(k, lengthBits+1-bitIndex) = bitand(currentLength, mask)>0;
		mask = 2 * mask;
    end
end

% lens = lens - lens;
B = [B lens];

elapse = toc(tmp_T);
end
